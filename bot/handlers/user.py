from aiogram import Router, types
from aiogram.filters import Command
from sqlalchemy.ext.asyncio import AsyncSession
from db.models import Transaction
from sqlalchemy import select

router = Router()

@router.message(Command("my_transactions"))
async def cmd_my_transactions(
    message: types.Message,
    session: AsyncSession
):
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    result = await session.execute(
        select(Transaction)
        .where(Transaction.user_id == message.from_user.id)
        .order_by(Transaction.created_at.desc())
    )
    transactions = result.scalars().all()

    if not transactions:
        await message.answer("üì≠ –£ –≤–∞—Å –Ω–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    response = ["üìä –í–∞—à–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:"]
    for tr in transactions:
        response.append(
            f"‚îú {tr.created_at.strftime('%d.%m.%Y %H:%M')}\n"
            f"‚îú ID: `{tr.telegram_payment_charge_id}`\n"
            f"‚îú –°—É–º–º–∞: {tr.amount} –∑–≤—ë–∑–¥\n"
            f"‚îî –°—Ç–∞—Ç—É—Å: {tr.status}\n"
        )

    await message.answer("\n".join(response), parse_mode="Markdown")
